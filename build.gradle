plugins {
    id 'signing'
    id 'maven-publish'
    id 'java'
}

group 'ru.objectsfill'
version '0.0.2'

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    compileOnly 'com.google.auto.service:auto-service:1.1.1'
    annotationProcessor 'com.google.auto.service:auto-service:1.1.1'

    implementation "org.apache.commons:commons-lang3:3.12.0"
    testImplementation "org.apache.commons:commons-lang3:3.12.0"

    implementation 'org.reflections:reflections:0.10.2'
}

test {
    useJUnitPlatform()
}

tasks.register('sourceJar', Jar) {
    from sourceSets.main.allJava
    archiveClassifier = "sources"
}

tasks.register('javadocJar', Jar) {
    dependsOn javadoc
    classifier = 'javadoc'
    from javadoc.destinationDir
}

publishing {
    publications {
        maven(MavenPublication) {publication ->
            artifact sourceJar
            artifact javadocJar
            artifactId = "objects-fill-processor"
            groupId = "ru.objectsfill"
            version = "0.0.2"
            from(components["java"])
            pom {
                packaging 'jar'
                name.set("Objects Fill Processor")
                url.set("https://github.com/runafterasun/objects-fill-processor")
                description.set("Fill objects with random values")

                licenses {
                    license {
                        name.set("The Apache License, Version 2.0")
                        url.set("http://www.apache.org/licenses/LICENSE-2.0.txt")
                    }
                }

                scm {
                    connection.set("scm:https://github.com/runafterasun/objects-fill-processor.git")
                    developerConnection.set("scm:git@github.com:runafterasun/objects-fill-processor.git")
                    url.set("https://github.com/runafterasun/objects-fill-processor")
                }

                developers {
                    developer {
                        id.set("Stereo")
                        name.set("Igor Saenko")
                        email.set("runafterasun@gmail.com")
                    }
                }
            }
        }
    }
    repositories {
        maven {
            URI releasesUrl = uri("https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/")
            URI snapshotsUrl = uri("https://s01.oss.sonatype.org/content/repositories/snapshots/")
            if (version.toString().endsWith("SNAPSHOT")) {
                url = snapshotsUrl
            } else {
                url = releasesUrl
            }
            credentials {
                username = project.properties["ossrhUsername"].toString()
                password = project.properties["ossrhPassword"].toString()
            }
        }
    }
}

signing {
    sign publishing.publications
}

